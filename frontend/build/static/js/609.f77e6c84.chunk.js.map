{"version":3,"file":"static/js/609.f77e6c84.chunk.js","mappings":"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","sources":["services/SiteApis.ts","components/RenderFroms.tsx","screens/auth/index.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from 'react-toastify';\n\nexport const axiosInstance: any = axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_URL}/`,\n    headers: {\n        \"Accept\": \"application/json\",\n    },\n});\n\nconst showError = (error: any) => {\n    console.log('error ', error)\n    if (error?.response?.data?.errMsg) {\n        return toast.error(error?.response?.data?.errMsg);\n    }\n    let messages = error?.response?.data?._server_messages ? JSON.parse(JSON.parse(error?.response?.data?._server_messages)[0]) : null\n    if (messages) {\n        return toast.error(messages?.message);\n    }\n};\n\nconst SiteApis = {\n    login: async (params: any) => {\n        return axiosInstance\n            .post(\"login\", params, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    axiosInstance.defaults.headers[\"authorization\"] = response?.data.token\n                    return response?.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    logout: async () => {\n        return axiosInstance.defaults.headers[\"authorization\"] = null\n    },\n    getDataApi: async (params: any, headers: any) => {\n        let body = `doctype=${params.doctype}&filters=${params.filters}&fields=${JSON.stringify(params.fields)}&cmd=frappe.client.get_list`\n        return axiosInstance\n            .post(\"api/method/frappe.desk.reportview.get_count\", body, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response?.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    getSingleDataApi: async (params: any, headers: any) => {\n        return axiosInstance\n            .get(`api/resource/${params.doctype}/${params.name}`, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response.data.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    addDataApi: async (params: any, headers: any) => {\n        return axiosInstance\n            .post(`api/resource/${params.doctype}`, params.body, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response.data.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    editDataApi: async (params: any, headers: any) => {\n        return axiosInstance\n            .put(`api/resource/${params.doctype}/${params.name}`, params.body, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response.data.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    deleteDataApi: async (params: any, headers: any) => {\n        return axiosInstance\n            .delete(`api/resource/${params.doctype}/${params.name}`, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response.data.message\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n    fileUploadApi: async (params: any, headers: any) => {\n        return axiosInstance\n            .post(`api/method/upload_file`, params.body, { withCredentials: false })\n            .then((response: any) => {\n                if (response?.status == 200 || response?.status == 201 || response?.status == 202) {\n                    return response.data.data\n                } else {\n                    throw new Error(response)\n                }\n            })\n            .catch((error: any) => {\n                showError(error);\n                return { error: true, message: error?.message }\n            });\n    },\n};\n\nexport default SiteApis;","import React, { useState, useRef } from \"react\";\nimport { Field } from \"formik\";\nimport { Avatar, DatePicker, Select, TreeSelect, Switch } from \"antd\";\nimport SiteApis from \"../services/SiteApis\";\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nconst { SHOW_PARENT } = TreeSelect;\n\nconst buildTree = (items: any, parentKey = null) => {\n  const map: any = {};\n  const roots: any = [];\n\n  // Create a mapping of id to item\n  items.forEach((item: any, index: any) => {\n    item['title'] = item.name\n    item['value'] = item.id\n    item['key'] = parentKey ? `${parentKey}-${index}` : `0-${index}`;\n    map[item.id] = { ...item, children: [] };\n  });\n\n\n  items.forEach((item: any, key: any) => {\n    if (item.parentId && map[item.parentId]) {\n      map[item.parentId].children.push(map[item.id]);\n    } else {\n      roots.push({ ...map[item.id], key: `0-${key}` });\n    }\n  });\n\n  // console.log(roots)\n  return roots;\n}\n\nconst ButtonBox = (props: any) => {\n  return (\n    <button\n      type=\"button\"\n      disabled={props.loading}\n      className=\"flex justify-center w-full p-3 text-white transition border rounded-lg cursor-pointer border-primary bg-primary hover:bg-opacity-90\"\n      {...props}>\n      {props.loading && (<div className=\"w-8 h-8 mr-5 border-t-4 border-blue-100 border-solid rounded-full animate-spin\"></div>)}\n      {props.loading ? \"Processing...\" : props.value}\n    </button>\n  );\n};\n\nconst InputBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            {props.pre && (<div style={{ position: \"absolute\", left: 5, top: 10 }}>{props.pre}</div>)}\n            {props.post && (<div style={{ position: \"absolute\", right: 5, top: 10 }}>{props.post}</div>)}\n            <input\n              value={field.value}\n              onChange={(obj) => {\n                form.setFieldValue(props.name, obj.target.value);\n              }}\n              type=\"text\"\n              placeholder={props.placeholder}\n              className={\"w-full p-2 pl-3 bg-transparent border rounded-lg outline-none border-stroke focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary\" + ((form?.errors[props.name] && form?.touched[props.name]) && \" border-b-meta-1\")}\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n            {props.icon && (<span className=\"absolute right-4 top-4\">{props.icon}</span>)}\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst PasswordBox = (props: any) => {\n  const [show, setShow] = useState(false);\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            <input\n              value={field.value}\n              onChange={(obj) => {\n                form.setFieldValue(props.name, obj.target.value);\n              }}\n              type={show ? \"text\" : \"password\"}\n              placeholder={props.placeholder}\n              className={\"w-full py-2 pl-6 pr-10 bg-transparent border rounded-lg outline-none border-stroke focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary\" + ((form?.errors[props.name] && form?.touched[props.name]) && \" border-b-meta-1\")}\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n            <span className=\"absolute right-4 top-4\">\n              <button onClick={() => setShow(!show)}>\n                {show ? <FiEye /> : <FiEyeOff />}\n              </button>\n            </span>\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst TextareaBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative w-full\">\n            <textarea\n              rows={6}\n              value={field.value}\n              onChange={(obj) => {\n                form.setFieldValue(props.name, obj.target.value);\n              }}\n              type=\"text\"\n              placeholder={props.placeholder}\n              className={\"w-full py-2 pl-6 pr-10 bg-transparent border rounded-lg outline-none border-stroke focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary\" + ((form?.errors[props.name] && form?.touched[props.name]) && \" border-b-meta-1\")}\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst DateBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            <DatePicker\n              onChange={(date, obj) => {\n                form.setFieldValue(props.name, obj);\n              }}\n              className={\"w-full py-2 pl-6 pr-10 bg-transparent border rounded-lg outline-none border-stroke focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary\" + ((form?.errors[props.name] && form?.touched[props.name]) && \" border-b-meta-1\")}\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst SelectBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            <select className=\"relative z-20 w-full px-5 py-3 transition bg-transparent border rounded outline-none appearance-none border-stroke focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input\"\n              value={field.value}\n              onChange={(obj) => {\n                form.setFieldValue(props.name, obj.target.value);\n              }}\n              {...props}>\n              <option value=\"\">{props.placeholder}</option>\n              {props.options.map((item: any, key: any) => item && <option key={key} value={item.value}>{item.label}</option>)}\n            </select>\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n            <span className=\"absolute right-4 top-4\"><IoIosArrowDown /></span>\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst MultiSelectBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            {props.tree ? <TreeSelect\n              allowClear\n              style={{\n                width: '100%',\n              }}\n              placeholder={props.placeholder ?? \"Please select\"}\n              value={field.value}\n              showCheckedStrategy={SHOW_PARENT}\n              onChange={(obj: any) => {\n                form.setFieldValue(props.name, obj);\n              }}\n              treeData={buildTree(props.options)}\n              {...props}\n            /> : <Select\n              mode=\"multiple\"\n              allowClear\n              style={{\n                width: '100%',\n              }}\n              placeholder={props.placeholder ?? \"Please select\"}\n              defaultValue={field.value}\n              onChange={(obj: any) => {\n                form.setFieldValue(props.name, obj);\n              }}\n              options={props.options}\n              {...props}\n            />}\n\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n            <span className=\"absolute right-4 top-4\"><IoIosArrowDown /></span>\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst FileBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n\n        const handleFileChange = async (event: any) => {\n          const response: any = await SiteApis.fileUploadApi(\"files\", event.target.files[0]);\n          if (!response?.error) {\n            form.setFieldValue(props.name, response?.url);\n          }\n        };\n\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            <input\n              onChange={handleFileChange}\n              type=\"file\"\n              className=\"w-full cursor-pointer rounded-lg border-[1.5px] border-stroke bg-transparent font-medium outline-none transition file:mr-5 file:border-collapse file:cursor-pointer file:border-0 file:border-r file:border-solid file:border-stroke file:bg-whiter file:py-3 file:px-5 file:hover:bg-primary file:hover:bg-opacity-10 focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:file:border-form-strokedark dark:file:bg-white/30 dark:file:text-white dark:focus:border-primary\"\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n            <span className=\"absolute right-4 top-2\"><Avatar shape=\"square\" src={<img src={field.value ? field.value : \"/images/user.png\"} alt=\"\" />} /></span>\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nconst TogelBox = (props: any) => {\n  return (\n    <Field name={props.name}>\n      {({ field, form, meta }: any) => {\n        return <>\n          {props.label && (<label className=\"mb-2.5 block font-medium text-black dark:text-white\">\n            {props.label} {(form?.errors[props.name] || props.required) && (<span className=\"text-meta-1\">{\"*\"}</span>)}\n          </label>)}\n          <div className=\"relative\">\n            <Switch\n              value={field.value}\n              onChange={(obj) => {\n                form.setFieldValue(props.name, obj);\n              }}\n              placeholder={props.placeholder}\n              className={\"w-full py-2 pl-6 pr-10 bg-transparent border rounded-lg outline-none border-stroke focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary\" + ((form?.errors[props.name] && form?.touched[props.name]) && \" border-b-meta-1\")}\n              {...props}\n            />\n            {form?.errors[props.name] && form?.touched[props.name] && (\n              <div className=\"mt-1 text-xs-1 text-meta-1\">{form.errors[props.name]}</div>\n            )}\n          </div>\n        </>\n      }}\n    </Field>\n  );\n};\n\nexport {\n  ButtonBox,\n  InputBox,\n  PasswordBox,\n  TextareaBox,\n  SelectBox,\n  MultiSelectBox,\n  DateBox,\n  TogelBox,\n  FileBox\n};\n","import { useEffect, useContext } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { MainContext } from \"../../contexts/mainProvider\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBox, PasswordBox, ButtonBox } from \"../../components/RenderFroms\";\nimport { BiSolidUser, BiSolidLockAlt, BiRightArrowAlt } from \"react-icons/bi\";\n\nexport default function Login() {\n  let navigate = useNavigate();\n  const { labels, login, isLoading, token } = useContext(MainContext)\n\n  useEffect(() => {\n    if (token) {\n      navigate('/', { replace: true })\n    }\n  }, [token])\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required(\"Username is required\"),\n    password: Yup.string()\n      .min(5, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n  });\n\n  const onPressHandle = async (values: any) => {\n    login({ ...values, deviceId: \"\" })\n  };\n\n  return (\n    <div className=\"page-wraper\">\n      <div className=\"page-content\">\n        <div className=\"aon-login-wrap d-flex\">\n          <div className=\"aon-login-left\">\n            <div className=\"aon-login-heading\">\n              <div className=\"aon-login-text\">\n                Your Trust is Our Greatest Incentive!\n              </div>\n              <div className=\"aon-login-pic\">\n                <img src=\"images/banner2/doctor.png\" alt=\"\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"aon-login-right d-flex flex-wrap align-items-center\">\n            <div className=\"aon-login-area\">\n              <div className=\"col-md-12\">\n                <div className=\"site-logo login-sign-logo\">\n                  <a href=\"index.html\"><img src=\"images/logo-dark.png\" alt=\"\" /></a>\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"login-sign-head\">\n                  <strong>{labels.signIn}</strong>\n                  <span>{labels.signInWelcome}</span>\n                </div>\n              </div>\n\n              <div className=\"tab-content\" >\n                <div className=\"tab-pane fade show active\" id=\"pills-one\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\">\n\n                  <Formik\n                    initialValues={{ email: \"a1@admin.com\", password: \"Demo@123\" }}\n                    validationSchema={validationSchema}\n                    onSubmit={(values) => onPressHandle(values)}\n                  >\n                    {({ handleChange, handleBlur, handleSubmit, values, errors }) => (\n                      <div className=\"aon-login-form\">\n                        <div className=\"row\">\n                          <div className=\"col-md-12\">\n                            <InputBox\n                              error={errors.email}\n                              placeholder=\"Username\"\n                              name=\"email\"\n                              onChangeText={handleChange(\"email\")}\n                              autoCapitalize=\"none\"\n                              icon={<BiSolidUser />}\n                            />\n                          </div>\n                          <div className=\"col-md-12\">\n                            <PasswordBox\n                              error={errors.password}\n                              placeholder=\"Password\"\n                              name=\"password\"\n                              onChangeText={handleChange(\"password\")}\n                              icon={<BiSolidLockAlt />}\n                            />\n                          </div>\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group flex-end\">\n                              <div className=\"aon-login-opright\">\n                                <NavLink to=\"/forgetPassword\">Forget Password</NavLink>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-12\">\n                            <ButtonBox icon={<BiRightArrowAlt />} name={labels.logIn} isLoading={isLoading} onClick={handleSubmit} />\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["axios","create","baseURL","concat","process","REACT_APP_BASE_URL","headers","SHOW_PARENT","TreeSelect","buildTree","items","parentKey","arguments","length","undefined","map","roots","forEach","item","index","name","id","children","key","parentId","push","ButtonBox","props","_jsxs","type","disabled","loading","className","_jsx","value","InputBox","Field","_ref","field","form","meta","_Fragment","label","errors","required","pre","style","position","left","top","post","right","onChange","obj","setFieldValue","target","placeholder","touched","icon","PasswordBox","show","setShow","useState","_ref2","onClick","FiEye","FiEyeOff","TextareaBox","_ref3","rows","MultiSelectBox","_ref6","_props$placeholder","_props$placeholder2","tree","allowClear","width","showCheckedStrategy","treeData","options","Select","mode","defaultValue","IoIosArrowDown","Login","navigate","useNavigate","labels","login","isLoading","token","useContext","MainContext","useEffect","replace","validationSchema","Yup","shape","email","password","min","src","alt","href","signIn","signInWelcome","role","Formik","initialValues","onSubmit","values","async","deviceId","onPressHandle","handleChange","handleBlur","handleSubmit","error","onChangeText","autoCapitalize","BiSolidUser","BiSolidLockAlt","NavLink","to","BiRightArrowAlt","logIn"],"sourceRoot":""}